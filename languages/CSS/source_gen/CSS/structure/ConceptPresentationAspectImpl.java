package CSS.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_CSS_Declaration;
  private ConceptPresentation props_CSS_Declaration_Block;
  private ConceptPresentation props_CSS_File;
  private ConceptPresentation props_CSS_Ruleset;
  private ConceptPresentation props_CSS_Selector;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.CSS_Declaration:
        if (props_CSS_Declaration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("declaration");
          props_CSS_Declaration = cpb.create();
        }
        return props_CSS_Declaration;
      case LanguageConceptSwitch.CSS_Declaration_Block:
        if (props_CSS_Declaration_Block == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("declaration block");
          props_CSS_Declaration_Block = cpb.create();
        }
        return props_CSS_Declaration_Block;
      case LanguageConceptSwitch.CSS_File:
        if (props_CSS_File == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_CSS_File = cpb.create();
        }
        return props_CSS_File;
      case LanguageConceptSwitch.CSS_Ruleset:
        if (props_CSS_Ruleset == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ruleset");
          props_CSS_Ruleset = cpb.create();
        }
        return props_CSS_Ruleset;
      case LanguageConceptSwitch.CSS_Selector:
        if (props_CSS_Selector == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_CSS_Selector = cpb.create();
        }
        return props_CSS_Selector;
    }
    return null;
  }
}
